<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="984" height="180" backgroundAlpha="0"
		   xmlns:images="com.hphant.modsite.site.assets.images.*" 
		   xmlns:text="com.hphant.modsite.site.assets.text.*"
	       xmlns:forms="com.hphant.modsite.site.assets.forms.*" alpha="0"
	       dataChange="{dataChanged()}"
	       verticalScrollPolicy="off" horizontalScrollPolicy="off" xmlns:text1="flash.text.*">
    <mx:addedEffect>
   		 <mx:SetPropertyAction name="currentState" value="added"/>
     </mx:addedEffect>
    <mx:removedEffect>
   		 <mx:SetPropertyAction name="currentState" value="removed"/>
     </mx:removedEffect>
	<mx:states>
		<mx:State name="added"/>
		<mx:State name="removed"/>
		<mx:State name="expanded"/>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="*" toState="added">
			<mx:Sequence >
				<mx:Fade target="{this}" alphaTo="1" />
				<mx:Resize target="{thumb}" widthTo="200" heightTo="150" easingFunction="mx.effects.easing.Exponential.easeOut"/>
			</mx:Sequence>
		</mx:Transition>
		<mx:Transition fromState="*" toState="removed">
			<mx:Sequence >
				<mx:Resize target="{thumb}" widthTo="0" heightTo="0" easingFunction="mx.effects.easing.Exponential.easeOut"/>
				<mx:Fade target="{this}" alphaTo="0" />
			</mx:Sequence>
		</mx:Transition>
	</mx:transitions>
	<mx:Box clipContent="false" verticalScrollPolicy="off" horizontalScrollPolicy="off" width="209" height="100%" minHeight="200" y="0" x="5" verticalAlign="middle" horizontalAlign="center" >
		<images:MAImage autoSize="false" click="{this.swapState()}" id="thumb" xml="{thmb}" width="0" height="0" buttonMode="true" useHandCursor="true"/>
	</mx:Box>
	<mx:VBox id="title" verticalGap="0" x="229" y="0" width="840">
		<mx:HBox verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<mx:VBox width="580" horizontalAlign="left" verticalScrollPolicy="off" horizontalScrollPolicy="off" verticalGap="0">
				<text:MAText id="ttlTxt" styleName="title" xml="{this.ttl}" bottom="0"/>
			</mx:VBox>
			<mx:VBox id="mileageText" width="140" horizontalAlign="right" verticalScrollPolicy="off" horizontalScrollPolicy="off" verticalGap="0">
				<text:MAText id="mlgTxt" styleName="title" xml="{this.dte}" bottom="0"/>
			</mx:VBox>
		</mx:HBox>
		<mx:resizeEffect>
			<mx:Resize />
		</mx:resizeEffect>
	</mx:VBox>
		<mx:HBox id="specText" verticalScrollPolicy="off" horizontalScrollPolicy="off" x="229" y="75">
			<mx:VBox verticalGap="0" width="580" horizontalAlign="left" verticalScrollPolicy="off" horizontalScrollPolicy="off">
				<text:MAText id="spcTxt" styleName="subTitle" xml="{this.blrb}" bottom="0"/>
			</mx:VBox>
		</mx:HBox>
	<mx:Button click="{this.swapState()}" id="detailsBtn" label="+" paddingLeft="0" paddingRight="0" width="25"  x="950" y="{this.height-this.detailsBtn.height-10}" buttonMode="true" useHandCursor="true"/>
	<!--<mx:states>
		<mx:State name="colapsed">
		</mx:State>
		<mx:State name="expanded">
			<mx:SetProperty target="{thumb}" name="width" value="0"/>
			<mx:SetProperty target="{thumb}" name="height" value="0"/>
			<mx:SetProperty target="{this}" name="height" value="80"/>
			<mx:SetProperty target="{this.title}" name="x" value="10"/>
			<mx:SetProperty target="{this.detailsBtn}" name="label" value="-"/>
			<mx:RemoveChild target="{this.specText}"/>
			<mx:RemoveChild target="{this.mileageText}"/>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="colapsed" toState="expanded">
			<mx:Sequence>
				<mx:Resize target="{thumb}" easingFunction="{mx.effects.easing.Exponential.easeIn}"/>
				<mx:Fade targets="{[this.mileageText,this.specText]}" alphaFrom="1" alphaTo="0" />
				<mx:RemoveChildAction targets="{[this.mileageText,this.specText]}" />
				<mx:Parallel>
					<mx:Move target="{title}" />
					<mx:Resize target="{this}"/>
				</mx:Parallel>
			</mx:Sequence>
		</mx:Transition>
		<mx:Transition fromState="expanded" toState="colapsed">
			<mx:Sequence>
				<mx:Parallel>
					<mx:Move target="{title}" />
					<mx:Resize target="{this}"/>
				</mx:Parallel>
				<mx:SetPropertyAction targets="{[this.mileageText,this.specText]}" name="alpha" value="0"/>
				<mx:AddChildAction targets="{[this.mileageText,this.specText]}" />
				<mx:Fade targets="{[this.mileageText,this.specText]}" alphaFrom="0" alphaTo="1" />
				<mx:Resize target="{thumb}" easingFunction="{mx.effects.easing.Back.easeOut}"/>
			</mx:Sequence>
		</mx:Transition>
	</mx:transitions>-->
	<mx:Script>
		<![CDATA[
			import com.hphant.modsite.data.calendar.BMCDEventItemData;
			import com.hphant.modsite.site.events.MALinkClickEvent;
			import mx.effects.easing.Back;
			import com.hphant.modsite.site.events.MAListItemEvent;
			import com.hphant.modsite.site.assets.interfaces.IMAsset;
			import mx.effects.easing.Exponential;
			[Bindable]
			private var ttl:XMLList;
			[Bindable]
			private var blrb:XMLList;
			[Bindable]
			private var dte:XMLList;
			[Bindable]
			private var thmb:XMLList;
			
			
			private function swapState():void{
				if(this.currentState=="expanded"){
					this.dispatchEvent(new MAListItemEvent(MAListItemEvent.COLAPSE_CLICK,this.data));
				} else if(this.currentState=="colapsed") {
					this.dispatchEvent(new MAListItemEvent(MAListItemEvent.EXPAND_CLICK,this.data));
				}
			}
			protected function dataChanged():void{
				if(this.data){
					var ed:BMCDEventItemData = new BMCDEventItemData();
					ed.row = XML(data);
					this.setBulletImage(ed);
					this.setTitle(ed);
					this.setBlurb(ed);
					this.setDate(ed);
				} else {
					ttl = null;
					blrb = null;
					dte = null;
					thmb = null;
				}
			}
			private function setBulletImage(ed:BMCDEventItemData):void{
				var s:String = XMLList(ed.thumbnail.data).toXMLString();
				thmb = XMLList(s);
			}
			protected function setTitle(ed:BMCDEventItemData):void{
				ttl = XMLList("<p>"+ed.title.data+"</p>");
			}
			protected function setBlurb(ed:BMCDEventItemData):void{
				blrb = XMLList("<p>"+ed.blurb.data+"</p>");
			}
			protected function setDate(ed:BMCDEventItemData):void{
				dte = XMLList(ed.start.data);
			}
		]]>
	</mx:Script>
</mx:Canvas>
