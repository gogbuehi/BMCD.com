<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="984" height="200" backgroundAlpha="0"
		   implements="com.hphant.modsite.site.assets.interfaces.IMAsset"
		   xmlns:images="com.hphant.modsite.site.assets.images.*" 
		   xmlns:text="com.hphant.modsite.site.assets.text.*"
	       xmlns:forms="com.hphant.modsite.site.assets.forms.*"
	       currentState="colapsed"
	       dataChange="{dataChanged()}"
	       verticalScrollPolicy="off" horizontalScrollPolicy="off" xmlns:text1="flash.text.*">
	<mx:Metadata>
		[Event(name="expandClick",type="com.hphant.modsite.site.events.MAListItemEvent")]
		[Event(name="colapseClick",type="com.hphant.modsite.site.events.MAListItemEvent")]
		[Event(name="linkClicked",type="com.hphant.modsite.site.events.MALinkClickEvent")]
	</mx:Metadata>
	
	<mx:Box clipContent="false" verticalScrollPolicy="off" horizontalScrollPolicy="off" width="209" height="100%" minHeight="200" y="0" x="10" verticalAlign="middle" horizontalAlign="center" >
		<images:MAImage autoSize="false" xml="{this.img}" click="{this.swapState()}" id="thumb" width="200" height="150" buttonMode="true" useHandCursor="true"/>
	</mx:Box>
	<mx:VBox id="title" verticalGap="0" x="229" y="10" width="840" clipContent="false" >
		<mx:HBox verticalScrollPolicy="off" horizontalScrollPolicy="off">
			<mx:VBox width="420" verticalGap="-5" clipContent="false" horizontalAlign="left" verticalScrollPolicy="off" horizontalScrollPolicy="off">
				<text:MAText styleName="title" xml="{this.ttl}" bottom="0" insertBreaks="false"/>
				<text:MAText styleName="specs" xml="{this.sttl}" bottom="0" insertBreaks="false"/>
			</mx:VBox>
			<mx:VBox id="mileageText" verticalGap="-5" clipContent="false" width="140" horizontalAlign="right" verticalScrollPolicy="off" horizontalScrollPolicy="off">
				<text:MAText styleName="title" xml="{this.mlg}" bottom="0" insertBreaks="false"/>
				<text:MAText styleName="specs" xml="{this.mlg_lbl}" bottom="0" insertBreaks="false"/>
			</mx:VBox>
			<mx:VBox id="priceText" verticalGap="-5" clipContent="false" width="160" horizontalAlign="right" verticalScrollPolicy="off" horizontalScrollPolicy="off">
				<text:MAText styleName="title" xml="{this.prc}" bottom="0" insertBreaks="false"/>
				<text:MAText styleName="specs" xml="{this.prc_lbl}" bottom="0" insertBreaks="false"/>
			</mx:VBox>
		</mx:HBox>
		<mx:resizeEffect>
			<mx:Resize />
		</mx:resizeEffect>
	</mx:VBox>
		<mx:HBox id="specText" horizontalGap="25" clipContent="false" verticalScrollPolicy="off" horizontalScrollPolicy="off" x="229" y="85" width="840">
			<mx:VBox verticalGap="-4" verticalScrollPolicy="off" horizontalScrollPolicy="off" clipContent="false">
				<text:MAText styleName="subTitle" xml="{this.vn_lbl}" bottom="0" insertBreaks="false"/>
				<text:MAText paddingLeft="10" styleName="specs" xml="{this.vn}" insertBreaks="false"/>
				<!--<mx:HBox verticalScrollPolicy="off" horizontalScrollPolicy="off" clipContent="false">-->
					<text:MAText styleName="subTitle" xml="{this.sn_lbl}" bottom="0" insertBreaks="false"/>
					<text:MAText paddingLeft="10" styleName="specs" xml="{this.sn}" insertBreaks="false"/>
				<!--</mx:HBox>-->
			</mx:VBox>
			<mx:VBox clipContent="false" verticalGap="-4" horizontalAlign="left" verticalScrollPolicy="off" horizontalScrollPolicy="off">
				<text:MAText styleName="subTitle" xml="{this.spcs_lbl}" bottom="0" insertBreaks="false"/>
				<mx:VBox paddingLeft="10" clipContent="false" verticalGap="10" horizontalAlign="left" verticalScrollPolicy="off" horizontalScrollPolicy="off">
					<text:MAText styleName="specs" xml="{this.spcs}" insertBreaks="false"/>
					<text:MAText styleName="specs" xml="{this.clr}" insertBreaks="false"/>
				</mx:VBox>
			</mx:VBox>
		</mx:HBox>
	<mx:Box id="certifiedHolder" x="824" y="58" width="150" height="97" clipContent="false" verticalScrollPolicy="off" horizontalScrollPolicy="off" verticalAlign="middle" horizontalAlign="center">
		<images:MAImage autoSize="{crtAutoSize}" id="certified" width="{crtWidth}" xml="{crt}" height="{crtHeight}" buttonMode="true" useHandCursor="true" linkClicked="{this.certifiedClicked(event)}">
			<images:resizeEffect>
				<mx:Resize easingFunction="mx.effects.easing.Exponential.easeInOut"/>
			</images:resizeEffect>
		</images:MAImage>
	</mx:Box>
	<mx:Button click="{this.swapState()}" id="detailsBtn" label="View Details" width="150"  x="824" y="{this.height-this.detailsBtn.height-10}" buttonMode="true" useHandCursor="true"/>
	<mx:states>
		<mx:State name="colapsed">
		</mx:State>
		<mx:State name="expanded">
			<mx:SetProperty target="{thumb}" name="width" value="0"/>
			<mx:SetProperty target="{thumb}" name="height" value="0"/>
			<mx:SetProperty target="{this}" name="height" value="80"/>
			<mx:SetProperty target="{this.title}" name="x" value="10"/>
			<mx:SetProperty target="{this.certifiedHolder}" name="x" value="680"/>
			<mx:SetProperty target="{this.certifiedHolder}" name="y" value="0"/>
			<mx:SetProperty target="{this.certifiedHolder}" name="height" value="80"/>
			<mx:SetProperty target="{this.detailsBtn}" name="label" value="Minimize"/>
			<mx:RemoveChild target="{this.specText}"/>
			<mx:RemoveChild target="{this.mileageText}"/>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition fromState="colapsed" toState="expanded">
			<mx:Sequence>
				<mx:Resize target="{thumb}" easingFunction="{mx.effects.easing.Exponential.easeIn}"/>
				<mx:Fade targets="{[this.mileageText,this.specText,this.priceText]}" alphaFrom="1" alphaTo="0" />
				<mx:RemoveChildAction targets="{[thumb,this.mileageText,this.specText]}" />
				<mx:Parallel>
					<mx:Move target="{title}" />
					<mx:Resize target="{this}"/>
					<mx:Move target="{this.certifiedHolder}" />
					<mx:Resize target="{this.certifiedHolder}"/>
				</mx:Parallel>
				<mx:Fade target="{this.priceText}" alphaFrom="0" alphaTo="1" />
			</mx:Sequence>
		</mx:Transition>
		<mx:Transition fromState="expanded" toState="colapsed">
			<mx:Sequence>
				<mx:Fade target="{this.priceText}" alphaFrom="1" alphaTo="0" />
				<mx:Parallel>
					<mx:Move target="{title}" />
					<mx:Resize target="{this}"/>
					<mx:Move target="{this.certifiedHolder}" />
					<mx:Resize target="{this.certifiedHolder}"/>
				</mx:Parallel>
				<mx:SetPropertyAction targets="{[this.mileageText,this.specText]}" name="alpha" value="0"/>
				<mx:AddChildAction targets="{[thumb,this.mileageText,this.specText]}" />
				<mx:Fade targets="{[this.mileageText,this.specText,this.priceText]}" alphaFrom="0" alphaTo="1" />
				<mx:Resize target="{thumb}" easingFunction="{mx.effects.easing.Back.easeOut}"/>
			</mx:Sequence>
		</mx:Transition>
	</mx:transitions>
	<mx:NumberFormatter id="mileageFormatter" precision="0" decimalSeparatorFrom="." thousandsSeparatorFrom="," thousandsSeparatorTo="," useThousandsSeparator="true" /> 
	<mx:CurrencyFormatter id="priceFormatter" alignSymbol="left" currencySymbol="$" precision="0" decimalSeparatorFrom="." thousandsSeparatorFrom="," thousandsSeparatorTo="," useThousandsSeparator="true" /> 
	<mx:Script>
		<![CDATA[
			import mx.formatters.CurrencyFormatter;
			import mx.formatters.NumberFormatter;
			import com.hphant.modsite.site.events.MALinkClickEvent;
			import mx.effects.easing.Back;
			import com.hphant.modsite.site.events.MAListItemEvent;
			import com.hphant.modsite.site.assets.interfaces.IMAsset;
			import com.hphant.modsite.data.inventory.BMCDInventoryItemData;
			import mx.effects.easing.Exponential;
			include "../interfaces/AssetIncludes.as";
			[Bindable]
			public var hRuleStyleName:String;
			[Bindable]
			public var suggestionsStyleName:String;
			[Bindable]
			private var ttl:XMLList;
			[Bindable]
			private var sttl:XMLList;
			[Bindable]
			private var mlg:XMLList;
			[Bindable]
			private var mlg_lbl:XMLList;
			[Bindable]
			private var prc:XMLList;
			[Bindable]
			private var prc_lbl:XMLList;
			[Bindable]
			private var spcs:XMLList;
			[Bindable]
			private var spcs_lbl:XMLList;
			[Bindable]
			private var vn:XMLList;
			[Bindable]
			private var vn_lbl:XMLList;
			[Bindable]
			private var sn:XMLList;
			[Bindable]
			private var sn_lbl:XMLList;
			[Bindable]
			private var crt:XMLList;
			[Bindable]
			private var clr:XMLList;
			[Bindable]
			private var crtHeight:Number=0;
			[Bindable]
			private var crtWidth:Number=0;
			[Bindable]
			private var crtAutoSize:Boolean=false;
			[Bindable]
			private var img:XMLList;
				
			private function swapState():void{
				log("Details button clicked : "+((this.currentState=="expanded") ? "colapse" : "expand"));
				if(this.currentState=="expanded"){
					this.dispatchEvent(new MAListItemEvent(MAListItemEvent.COLAPSE_CLICK,this.data));
				} else if(this.currentState=="colapsed") {
					this.dispatchEvent(new MAListItemEvent(MAListItemEvent.EXPAND_CLICK,this.data));
				}
			}
			protected function dataChanged():void{
				if(this.data){
					var di:BMCDInventoryItemData = new BMCDInventoryItemData();
					di.row = XML(data);
					this.setBulletImage(di);
					this.setTitle(di);
					this.setMileage(di);
					this.setPrice(di);
					this.setVin(di);
					this.setStock(di);
					this.setSpecs(di);
				} else {
					this.clr = null;
					this.crt = null;
					this.ttl = null;
					this.sttl = null;
					this.spcs = null;
					this.spcs_lbl = null;
					this.vn = null;
					this.vn_lbl = null;
					this.sn = null;
					this.sn_lbl = null;
					this.mlg = null;
					this.mlg_lbl = null;
					this.prc = null;
					this.prc_lbl = null;
				}
			}
			private function setBulletImage(di:BMCDInventoryItemData):void{
				var s:String = XMLList(di.photo.data).toXMLString();//.replace("/images/","/thumb.php/");
				img = XMLList(s);
				if(String(di.certified.data)=="yes"){
					s  = XMLList(BMCDInventoryItemData.urlTemplates.li.(@['class']=="certified_logo").children()).toXMLString();
					s = s.replace("["+di.make.label+"]",String(di.make.data).toLowerCase());
					crtAutoSize = false;
					
					crtWidth = 80;
					crtHeight = 52;
					crt = XMLList(s.replace("["+di.make.label+"]",String(di.make.data).toLowerCase()));
				} else {
					crtAutoSize = false;
					crt = null;
					crtWidth = 0;
					crtHeight = 0;
				}
			}
			protected function setTitle(di:BMCDInventoryItemData):void{
				ttl = XMLList("<p>"+di.year.data + " " + di.model.data+"</p>");
				sttl = XMLList("<p>"+di.make.data+"</p>");
			}
			protected function setSpecs(di:BMCDInventoryItemData):void{
				var eng:String = "<p><h1><i>"+di.engine.label+":</i> </h1><h1>"+di.engine.data+"</h1></p>";
				var trns:String = "<p>"+di.transmission.data+"</p>";
				clr = XMLList("<p><h1><i>"+di.color.label+":</i> </h1><h1>"+di.color.data+"</h1></p>");
				spcs_lbl = XMLList(<p>Specifications:</p>);
				spcs = XMLList(eng+trns);
			}
			protected function setVin(di:BMCDInventoryItemData):void{
				vn = XMLList(di.vin.data);
				vn_lbl = XMLList("<p>"+di.vin.label+":</p>");
			}
			protected function setStock(di:BMCDInventoryItemData):void{
				sn = XMLList(di.stockNumber.data);
				var t:String = (XML(di.stockNumber.label).toString()=="StockNumber") ? "Stock #" : di.stockNumber.label;
				sn_lbl = XMLList("<p>"+t+":</p>");
			}
			protected function setMileage(di:BMCDInventoryItemData):void{
				mlg_lbl = XMLList(String(di.mileage.label).toLowerCase());
				mlg = XMLList(mileageFormatter.format(di.mileage.data));
			}
			protected function setPrice(di:BMCDInventoryItemData):void{
				prc_lbl = XMLList(String(di.price.label).toLowerCase());
				if(Number(di.price.data)==0){
					prc = XMLList("Call for price");
				} else {
					prc = XMLList(priceFormatter.format(di.price.data));
				}
			}
			private function certifiedClicked(e:MALinkClickEvent):void{
				//navigateToURL(new URLRequest(XML(e.item).@href),"_blank");
				this.dispatchEvent(new MALinkClickEvent(MALinkClickEvent.LINK_CLICKED,e.item));
			}
		]]>
	</mx:Script>
</mx:Canvas>
